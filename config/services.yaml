# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    images_directory: '%kernel.project_dir%/public/uploads'
    images_public_path: '/uploads'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    image.upload:
        class: App\Service\ImageUpload
        public: true
        arguments:
            - '%images_directory%'

    App\Service\Gravatar:
        tags: ['gravatar']
        arguments:
            $size: 160
            $defaultImage: 'http://zex.com.ua/wp-content/uploads/2014/10/default-person.png'

    admin.article:
        class: App\Admin\ArticleAdmin
        arguments: [~, App\Entity\Article, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, label: Article, group: Blog }

    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Category, group: Blog }
        calls:
            - [ setTemplate, [edit, sonata/edit.html.twig]]

    admin.tag:
        class: App\Admin\TagAdmin
        arguments: [~, App\Entity\Tag, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Tag, group: Blog }

    admin.articlecomment:
        class: App\Admin\ArticleCommentAdmin
        arguments: [~, App\Entity\ArticleComment, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, label: Comments, group: Blog }

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, label: User, group: User }

    admin.subscriber:
        class: App\Admin\SubscriberAdmin
        arguments: [~, App\Entity\Subscriber, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Subscriber, group: Site }
